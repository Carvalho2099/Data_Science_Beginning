import numpy as np

print('Numpy - biblioteca matemática, mais utilizada com Álgrebra Linear, Vetores e Matrizes.')

print('Estruturas unidimensionais')
a1 = np.array(['Spark', 'Hadoop', 'Python', 'R'])
print(a1)

print('Arrays podem ter listas de tipos diferentes')
print('Estruturas Bidimensionais')

a2 = np.array([['Altura', 'Largura', 'Profundidade'], [42, 78, 10]])
print(a2)
a3 = np.array([[10, 20, 30], [40, 50, 60]])
print(a3)

print('Tamanho do array')
print(a1.shape)
print(a2.shape)

print('Dimensão do array')
print(a1.ndim)
print(a2.ndim)

print('Ausência ou presença de parênteses')
print('Podemos realizar uma analogia com caracteristicas e ações. O uso de parenteses reflete uma ação, enquanto ')
print('a ausência, reflete uma caracteristica')
print('O método max() não funciona em array do tipo heterogeneos')
print(a3.max())
print('Atributo')
print(a2.ndim)
print('Método Arange')
array = np.arange(20)
print(array)
array2 = np.arange(0, 100, 10)
print(array2)
print('Criando estruturas de dados com linspace')
print('Fique atento: a diferença do linspace para o arange é que no arange o ultimo argumento é o incremento')
print('e no linspace o ultimo argumento é o numero de elementos do vetor(aleatorio)')
matriz = np.linspace(0, 10, 20)
print(matriz)

matriz2 = np.linspace(0, 5, 5)
print(matriz2)

print('Estruturas de Matrizes')
print('numpy.zeros')
matriz3 = np.zeros((10, 10))
print(matriz3)
print('numpy.ones')
matriz4 = np.ones((2,3))
print(matriz4)
print('numpy,eye - produz uma matriz do tipo indentity')
matriz5 = np.eye(10)
print(matriz5)
print('numpy.diag - produz o mesmo resultado, porem podemos definir os numeros das diagonais')
matriz6 = np.diag((2, 4, 6, 8, 10, 12, 14, 16, 18, 20))
print(matriz6)
print('numpy.empty faz uma matriz vazia')
matriz7 = np.empty((10, 5))
print(matriz7)
print('numpy.title')
print(np.tile(np.array([[1, 2], [3, 4], [5, 6]]), 3))
print(np.tile(np.array([[1, 2], [3, 4], [5, 6]]), (3, 6)))
print('num de vezes do array na vertical, num de vezes array na horizontal')
